@startuml Manage Car (Update One)

header Rental Car Sequence Diagram
footer Page %page% of %lastpage%
title "Manage Car (Update One)"

' --------------------------------------------------------------------
actor "User" as user
actor "Admin" as admin
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:cars" as routerCars
participant "<<middleware>>\n:auth" as middlewareAuth
participant "<<model>>\n:User" as modelUser
participant "<<controllers>>\n:cars" as controllersCars
participant "<<model>>\n:Car" as modelCars
database "<<MongoDB>>\n:cars" as CarsDatabase
database "<<MongoDB>>\n:users" as UsersDatabase

' --------------------------------------------------------------------
admin -> server ++: req.put('/cars/:carId')

server -> routerCars ++: app.use('/cars', cars)
routerCars ->middlewareAuth ++: protect(token)
middlewareAuth -> modelUser ++: findById(decode.id)
modelUser -> UsersDatabase ++: findById(decode.id)
modelUser <-- UsersDatabase --: user

middlewareAuth <-- modelUser --:user

routerCars <-- middlewareAuth --: next()


routerCars -> middlewareAuth ++: authorize("admin")
routerCars <-- middlewareAuth --: next()

routerCars -> controllersCars ++: updateCar()

controllersCars -> modelCars ++: findByIdAndUpdate(req.params.id,req.body)

modelCars -> CarsDatabase ++: CarSchema
CarsDatabase --> modelCars --: car
controllersCars <-- modelCars --: car
controllersCars -> admin --: response

' --------------------------------------------------------------------
@enduml

